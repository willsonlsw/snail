C51 COMPILER V7.06   SENSOR                                                                03/22/2013 05:09:45 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE SENSOR
OBJECT MODULE PLACED IN sensor.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE sensor.c LARGE OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          #include<reg52.h>
   2          #include<I2C.H>
   3          //#include<I2C.c>
   4          #include<math.H>
   5          #include <intrins.h>
   6          #include"sensor.h"
   7          #define  PCF8591 0x90    //PCF8591 地址
   8          
   9          bit ISendByte(unsigned char sla,unsigned char c)
  10          {
  11   1         Start_I2c();              //启动总线
  12   1         SendByte(sla);            //发送器件地址
  13   1         if(ack==0)return(0);
  14   1         SendByte(c);              //发送数据
  15   1         if(ack==0)return(0);
  16   1         Stop_I2c();               //结束总线
  17   1         return(1);
  18   1      }
  19          
  20          unsigned char IRcvByte(unsigned char sla)
  21          {  unsigned char c;
  22   1      
  23   1         Start_I2c();          //启动总线
  24   1         SendByte(sla+1);      //发送器件地址
  25   1         if(ack==0)return(0);
  26   1         c=RcvByte();          //读取数据0
  27   1         Ack_I2c(1);           //发送非就答位
  28   1         Stop_I2c();           //结束总线
  29   1         return(c);
  30   1      }
  31          
  32          void GetAcc(int *Roll,int *Pitch)
  33          {
  34   1              idata double X,Y,Z;
  35   1              idata unsigned int  D[4];
  36   1      
  37   1              ISendByte(PCF8591,0x41);
  38   1          D[0]=IRcvByte(PCF8591)*2;  //ADC0 模数转换1  放大2倍显示  
  39   1              _nop_();_nop_();_nop_();_nop_();_nop_();
  40   1              ISendByte(PCF8591,0x42);
  41   1          D[1]=IRcvByte(PCF8591)*2;  //ADC1  模数转换2  
  42   1              _nop_();_nop_();_nop_();_nop_();_nop_();
  43   1              ISendByte(PCF8591,0x43);
  44   1          D[2]=IRcvByte(PCF8591)*2;  //ADC2   模数转换3  
  45   1              _nop_();_nop_();_nop_();_nop_();_nop_();
  46   1              ISendByte(PCF8591,0x40);
  47   1          D[3]=IRcvByte(PCF8591)*2;  //ADC3   模数转换4  
  48   1      
  49   1              X=-(D[1]-165);
  50   1              Y=D[2]-165;
  51   1              Z=D[3]-165;
  52   1              *Roll=((atan2(Z,X)*180)/3.14159265)+180;
  53   1              *Pitch=((atan2(Z,Y)*180)/3.14159265)+180;
  54   1              return;
  55   1      }
C51 COMPILER V7.06   SENSOR                                                                03/22/2013 05:09:45 PAGE 2   

  56          
  57          unsigned int GetDis(int *d0)
  58          {
  59   1              idata unsigned int  D,tmp;
  60   1              idata double temp=0;
  61   1      
  62   1              ISendByte(PCF8591,0x41);
  63   1          D=IRcvByte(PCF8591)*2;  //ADC1  模数转换2  
  64   1      
  65   1              *d0=D;
  66   1      
  67   1              temp=(double)D/100.0;
  68   1          tmp=-34.6638*temp*temp*temp+191.8747*temp*temp-360.4113*temp+264.9415;
  69   1          if(tmp<=20){  tmp=0;  }
  70   1          else if(tmp>=150) { tmp =0; }
  71   1      
  72   1              return tmp;
  73   1      }
  74          
  75          unsigned int GetDisAll(int *d0,int *d1,int *d2,int *d3)
  76          {
  77   1              idata unsigned int  D[4],tmp;
  78   1              idata double temp=0;
  79   1      
  80   1              ISendByte(PCF8591,0x40);
  81   1          D[0]=IRcvByte(PCF8591)*2;  //ADC0 模数转换1  放大2倍显示  
  82   1              ISendByte(PCF8591,0x41);
  83   1          D[1]=IRcvByte(PCF8591)*2;  //ADC1  模数转换2  
  84   1              ISendByte(PCF8591,0x42);
  85   1          D[2]=IRcvByte(PCF8591)*2;  //ADC2   模数转换3  
  86   1              ISendByte(PCF8591,0x43);
  87   1          D[3]=IRcvByte(PCF8591)*2;  //ADC3   模数转换4  
  88   1      
  89   1              *d0=D[0];
  90   1              *d1=D[1];
  91   1              *d2=D[2];
  92   1              *d3=D[3];
  93   1      
  94   1              temp=(double)D[1]/100.0;
  95   1          tmp=-34.6638*temp*temp*temp+191.8747*temp*temp-360.4113*temp+264.9415;
  96   1          if(tmp<=20){  tmp=0;  }
  97   1          else if(tmp>=150) { tmp =0; }
  98   1      
  99   1              return tmp;
 100   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    879    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      25
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----      42
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
